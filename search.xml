<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git</title>
      <link href="/2024/05/17/git/"/>
      <url>/2024/05/17/git/</url>
      
        <content type="html"><![CDATA[<h1 id="git学习笔记"><a href="#git学习笔记" class="headerlink" title="git学习笔记"></a>git学习笔记</h1><h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><p>略</p><h2 id="git使用方式"><a href="#git使用方式" class="headerlink" title="git使用方式"></a>git使用方式</h2><ol><li>命令行</li><li>图形化界面</li><li>插件</li></ol><h2 id="git使用前的准备"><a href="#git使用前的准备" class="headerlink" title="git使用前的准备"></a>git使用前的准备</h2><p>配置(提交者）用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局配置用户名</span></span><br><span class="line">git config --global user.name <span class="string">&quot;yours name&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局配置邮箱</span></span><br><span class="line">git config --global user.email <span class="string">&quot;yours email&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存用户名和密码</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看git配置信息</span></span><br><span class="line">git config --global --list</span><br></pre></td></tr></table></figure><h2 id="新建版本库"><a href="#新建版本库" class="headerlink" title="新建版本库"></a>新建版本库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方法一 初始化本地仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二 克隆远程仓库</span></span><br><span class="line">git <span class="built_in">clone</span></span><br></pre></td></tr></table></figure><h2 id="git的工作区域与文件状态"><a href="#git的工作区域与文件状态" class="headerlink" title="git的工作区域与文件状态"></a>git的工作区域与文件状态</h2><h3 id="工作区-Working-Directory（-git所在目录）"><a href="#工作区-Working-Directory（-git所在目录）" class="headerlink" title="工作区 Working Directory（.git所在目录）"></a>工作区 Working Directory（.git所在目录）</h3><p>实际操作的目录</p><h3 id="暂存区-Staging-Area-Index（-git-index"><a href="#暂存区-Staging-Area-Index（-git-index" class="headerlink" title="暂存区 Staging Area&#x2F;Index（.git&#x2F;index)"></a>暂存区 Staging Area&#x2F;Index（.git&#x2F;index)</h3><p>临时存储区域，用于保存即将提交到git仓库的修改内容</p><h3 id="本地仓库-Local-Repository-（-git-objects）"><a href="#本地仓库-Local-Repository-（-git-objects）" class="headerlink" title="本地仓库 Local Repository （.git&#x2F;objects）"></a>本地仓库 Local Repository （.git&#x2F;objects）</h3><p>通过命令创建的仓库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 工作区到暂存区</span></span><br><span class="line">git add</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存区到本地仓库</span></span><br><span class="line">git commit</span><br></pre></td></tr></table></figure><h3 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h3><h4 id="未跟踪-Untrack"><a href="#未跟踪-Untrack" class="headerlink" title="未跟踪 Untrack"></a>未跟踪 Untrack</h4><p>新创建但未被git管理的文件</p><h4 id="未修改-Unmodified"><a href="#未修改-Unmodified" class="headerlink" title="未修改 Unmodified"></a>未修改 Unmodified</h4><p>文件已被git管理，但内容没有变化</p><h4 id="已修改-Modified"><a href="#已修改-Modified" class="headerlink" title="已修改 Modified"></a>已修改 Modified</h4><p>文件已被修改，但没有暂存</p><h4 id="已暂存-Staged"><a href="#已暂存-Staged" class="headerlink" title="已暂存 Staged"></a>已暂存 Staged</h4><p>修改后添加到暂存区内的文件</p><h2 id="添加文件到仓库"><a href="#添加文件到仓库" class="headerlink" title="添加文件到仓库"></a>添加文件到仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看仓库状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加到暂存区</span></span><br><span class="line">git add</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前目录下的所有文件添加到暂存区 </span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将特定类型的文件添加到暂存区</span></span><br><span class="line">git add *.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交</span></span><br><span class="line">git commit -m <span class="string">&quot;提交标注&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看提交记录</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看暂存区的内容</span></span><br><span class="line">git ls-files</span><br></pre></td></tr></table></figure><h2 id="git-reset命令"><a href="#git-reset命令" class="headerlink" title="git reset命令"></a>git reset命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下命令均为撤销操作，回退版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留工作区和暂存区的内容</span></span><br><span class="line">git reset --soft</span><br><span class="line"></span><br><span class="line"><span class="comment"># 丢弃工作区和暂存区的内容</span></span><br><span class="line">git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留工作区的内容，丢弃暂存区的内容</span></span><br><span class="line">git reset --mixed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看操作历史记录</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="git-diff命令"><a href="#git-diff命令" class="headerlink" title="git diff命令"></a>git diff命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看差异（difference）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看工作区与暂存区间的差异</span></span><br><span class="line">git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作区与版本库间的差异</span></span><br><span class="line">git diff HEAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存区与版本库间的差异</span></span><br><span class="line">git diff --cached</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较特定版本之间的差异</span></span><br><span class="line">git diff <span class="string">&quot;版本号1&quot;</span> <span class="string">&quot;版本号2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较当前版本与上一个版本的差异</span></span><br><span class="line">git diff HEAD~ HEAD</span><br><span class="line">git diff HEAD^ HEAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较当前版本与HEAD之前的第2个版本的差异</span></span><br><span class="line">git diff HEAD~2 HEAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较当前版本与上一个版本中特定文件的差异</span></span><br><span class="line">git diff HEAD~ HEAD <span class="string">&quot;文件名&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分支间的差异</span></span><br><span class="line">git diff <span class="string">&quot;分支1&quot;</span> <span class="string">&quot;分支2&quot;</span></span><br></pre></td></tr></table></figure><h2 id="删除版本库中的文件"><a href="#删除版本库中的文件" class="headerlink" title="删除版本库中的文件"></a>删除版本库中的文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 直接删除文件后提交</span></span><br><span class="line"><span class="built_in">rm</span> file</span><br><span class="line">git add file</span><br><span class="line">git commit -m <span class="string">&quot;rm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用git rm 命令</span></span><br><span class="line">git <span class="built_in">rm</span> file</span><br><span class="line">git commit -m <span class="string">&quot;git rm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不删除本地文件</span></span><br><span class="line">git <span class="built_in">rm</span> --cached file</span><br><span class="line">git commit -m <span class="string">&quot;git rm&quot;</span></span><br></pre></td></tr></table></figure><h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><h3 id="应该忽略那些文件"><a href="#应该忽略那些文件" class="headerlink" title="应该忽略那些文件"></a>应该忽略那些文件</h3><ul><li>系统或软件自动生成的文件</li><li>编译产生的中间文件和结果文件</li><li>运行时生成的日志文件、缓存文件、临时文件</li><li>涉及身份、密码、口令、密钥的敏感信息文件</li></ul><h3 id="匹配规则"><a href="#匹配规则" class="headerlink" title="匹配规则"></a>匹配规则</h3><ul><li>从上到下逐行匹配，每一行表示一个忽略模式</li><li>以#开头表示注释</li><li>使用标准的blob模式匹配<ul><li>* 通配任意个字符</li><li>? 匹配单个字符</li><li>[] 表示匹配列表中的单个字符</li></ul></li><li>** 表示匹配任意中间目录</li><li>中括号可以使用短中线链接<ul><li>[0-9] 表示任意一位数字，[a-z] 表示任意一位小写字母</li></ul></li><li>! 表述取反</li></ul><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><ol><li><p>注册账户</p></li><li><p>SSH配置</p></li><li><p>克隆仓库</p></li><li><p>本地仓库与远程仓库同步</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拉取</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li></ol><h2 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加远程仓库</span></span><br><span class="line">git remote add &lt;shortname&gt; &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前仓库对应远程仓库的别名与地址</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定分支名称为main</span></span><br><span class="line">git branch -M main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分支关联</span></span><br><span class="line">git push -u origin main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动合并</span></span><br><span class="line">git pull (origin main)</span><br><span class="line"><span class="comment"># 手动合并</span></span><br><span class="line">git fetch (origin main)</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基本操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前仓库所有分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改分支名称</span></span><br><span class="line">git branch -M main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新的分支</span></span><br><span class="line">git branch &lt;new_branch_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换不同的分支</span></span><br><span class="line">git checkout &lt;branch_name&gt;</span><br><span class="line">git switch &lt;branch_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并分支</span></span><br><span class="line">git merge &lt;merged_branch_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看图形化分支图</span></span><br><span class="line">git <span class="built_in">log</span> --oneline --graph --decorate --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除已合并分支</span></span><br><span class="line">git branch -d &lt;branch_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除未合并分支</span></span><br><span class="line">git branch -D &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><h2 id="解决合并冲突"><a href="#解决合并冲突" class="headerlink" title="解决合并冲突"></a>解决合并冲突</h2><ul><li>分支间修改内容没有重合部分，git会自动合并</li><li>如果发生冲突，修改发生冲突的文件，手动合并</li></ul><h2 id="变基-Rebase"><a href="#变基-Rebase" class="headerlink" title="变基 Rebase"></a>变基 Rebase</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 树枝变树干</span></span><br><span class="line">git rebase &lt;branch_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回复指定状态下的分支</span></span><br><span class="line">git checkout -b &lt;branch_name&gt; &lt;status_code&gt;</span><br></pre></td></tr></table></figure><h2 id="Merge与Rebased对比"><a href="#Merge与Rebased对比" class="headerlink" title="Merge与Rebased对比"></a>Merge与Rebased对比</h2><h3 id="Merge"><a href="#Merge" class="headerlink" title="Merge"></a>Merge</h3><ul><li>优点：<ul><li>不会破坏缘分支的提交历史，方便回溯和查看</li></ul></li><li>缺点<ul><li>会产生额外的提交节点，分支图比较复杂</li></ul></li></ul><h3 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h3><ul><li>优点<ul><li>不会增加额外的提交记录，形成线性历史，比较直观干净</li></ul></li><li>缺点<ul><li>会改变提交历史，改变当前分支的branch out的节点。</li><li>避免在共享分支使用。</li></ul></li></ul><h2 id="git分支工作流模型"><a href="#git分支工作流模型" class="headerlink" title="git分支工作流模型"></a>git分支工作流模型</h2><ul><li>GitFlow模型</li><li>GitHub Flow模型</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/16/hello-world/"/>
      <url>/2024/05/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
